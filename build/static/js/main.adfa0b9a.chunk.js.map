{"version":3,"sources":["components/app-header.js","list-functions.js","actions.js","components/item-add-form.js","components/item-edit-form.js","components/twitter-list-item.js","components/twitter-list.js","components/search-panel.js","pages/Home.js","pages/About.js","pages/Auth.js","App.js","reducer.js","index.js"],"names":["AppHeader","className","href","src","width","height","alt","to","exact","updateItem","state","id","content","dispatch","axios","put","headers","then","response","console","log","idx","findIndex","item","label","type","payload","addTweet","post","uuid","v4","addItem","delTweet","delete","catch","error","deleteItem","updateTweet","setSearchQuery","searchQuery","ItemAddForm","alertType","onLabelChange","e","setState","target","value","onSubmit","preventDefault","props","this","onChange","placeholder","Component","connect","bindActionCreators","actions","ItemEditForm","onUpdateItem","itemId","mainState","items","formStyle","formVisibility","TwitterListItem","deleteTweet","key","onClick","editLabel","TwitterList","filteredTweets","map","SearchPanel","counter","Home","searchItems","search","length","filter","toLowerCase","indexOf","inc","dec","rand","About","reduxForm","form","formData","handleSubmit","pristine","submitting","htmlFor","Field","name","component","disabled","App","path","LoginForm","initialState","reducers","combineReducers","action","slice","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.adfa0b9a.chunk.js","sourcesContent":["import React from 'react';\nimport './app-header.css';\nimport {NavLink} from 'react-router-dom';\n\nconst AppHeader = () => {\n    return (\n        <nav className=\"navbar navbar-light bg-light mb-3\">\n            <a className=\"navbar-brand\" href=\"./\">\n                <img src=\"/assets/tweet-icon.svg\" width=\"30\" height=\"30\" className=\"d-inline-block align-top mr-2\"\n                     alt=\"\"/>\n                Tweeter react app\n            </a>\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <NavLink\n                        className=\"nav-link\"\n                        to=\"/\"\n                        exact\n                    >Home</NavLink>\n                </li>\n                <li className=\"nav-item\">\n                    <NavLink\n                        className=\"nav-link\"\n                        to=\"/About\"\n                    >About</NavLink>\n                </li>\n                <li className=\"nav-item\">\n                    <NavLink\n                        className=\"nav-link\"\n                        to=\"/auth\"\n                    >Auth</NavLink>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nexport default AppHeader;\n","import axios from 'axios'\nimport uuid from \"uuid\";\n\nexport const getList = () => {\n    return axios.get('/api/tweets', {\n        headers: {'Content-Type': 'application/json'}\n    }).then(res => {\n        console.log(res.data);\n\n        /*searchItems = (items, search) => {\n            if (search.length === 0) {\n                return items;\n            }\n            return items.filter((item) => {\n                return item.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\n            });\n        };*/\n\n\n\n    })\n};\n\nexport const getItem = (id) => {\n    return axios.get(`/api/tweets/${id}`, {\n        headers: {'Content-Type': 'application/json'}\n    }).then(res => {\n        console.log(res.data)\n    })\n};\n\nexport const addItem = (content, dispatch) => {\n    return axios.post(\n        '/api/tweets',\n        {content: content},\n        {headers: {'Content-Type': 'application/json'}}\n    ).then((response) => {\n\n        console.log(response);\n\n        dispatch({\n            type: 'ADD_TWEET',\n            payload: {\n                label: content,\n                id: uuid.v4()\n            }\n        });\n\n    })\n};\n\nexport const deleteItem = (id, dispatch) => {\n\n    axios.delete(`/api/tweets/${id}`, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then((response) => {\n            console.log(response)\n        })\n        .catch((error) => {\n            console.log(error);\n\n            dispatch({\n                type: 'DELETE_TWEET',\n                payload: {\n                    id: id\n                }\n            });\n        })\n};\n\nexport const updateItem = (state, id, content, dispatch) => {\n    return axios.put(\n            `/api/tweets/${id}`,\n            {content: content},\n            {headers: {'Content-Type': 'application/json'}}\n        ).then((response) => {\n\n            console.log(response);\n\n            const idx = state.findIndex((item) => item.id === id);\n            const item = {...state[idx], label: content};\n\n            dispatch({\n                type: 'UPDATE_TWEET',\n                payload: {\n                    item: item,\n                    id: idx\n                }\n            });\n        })\n};","import uuid from \"uuid\";\nimport { getList, getItem, addItem, deleteItem, updateItem } from './list-functions.js';\n\nexport const addTweet = (label) => {\n    return (dispatch) => {\n        addItem(label, dispatch);\n    };\n};\n\nexport const delTweet = (id) => {\n    return (dispatch) => {\n        deleteItem(id, dispatch);\n    };\n};\n\nexport const updateTweet = (state, id, label) => {\n    return (dispatch) => {\n        updateItem( state, id, label, dispatch );\n    };\n};\n\nexport const setSearchQuery = (searchQuery) => {\n    return {\n        type: 'SET_SEARCH_QUERY',\n        payload: {\n            searchQuery: searchQuery\n        }\n    }\n};","import React, {Component} from 'react';\nimport './item-add-form.css';\n\nimport {connect} from 'react-redux';\nimport * as actions from '../actions.js';\nimport {bindActionCreators} from 'redux';\n\nclass ItemAddForm extends Component {\n\n    state = {\n        label: '',\n        alertType: ''\n    };\n\n    onLabelChange = (e) => {\n        this.setState({label: e.target.value});\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const alertType = this.state.label ? 'is-valid' : 'is-invalid';\n        if (this.state.label) {\n            this.props.addTweet(this.state.label);\n        }\n        this.setState({\n            label: '',\n            alertType: alertType\n        });\n    };\n\n    render() {\n        const {label, alertType} = this.state;\n\n        return (\n            <div className=\"container p-0\">\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group row\">\n                        <div className=\"col-sm-12\">\n                              <textarea\n                                  onChange={this.onLabelChange}\n                                  placeholder=\"Please enter your tweet\"\n                                  value={label}\n                                  className={`form-control ${alertType}`}\n                              > </textarea>\n                            <button className=\"btn btn-outline-primary\">Add new Tweet</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    const {addTweet} = bindActionCreators(actions, dispatch);\n    return {\n        addTweet\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemAddForm);","import React, {Component} from 'react';\nimport './item-edit-form.css';\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as actions from '../actions.js';\n\n\nclass ItemEditForm extends Component {\n\n    state = {\n        label: ''\n    };\n\n    onUpdateItem = (e) => {\n        e.preventDefault();\n\n        const {state, itemId} = this.props;\n        this.props.updateTweet(state.mainState.items, itemId, this.state.label);\n    };\n\n    onLabelChange = (e) => {\n        this.setState({\n            label: e.target.value\n        });\n    };\n\n    render() {\n        const formStyle = this.props.formVisibility ? '' : 'd-none';\n\n        return (\n            <form onSubmit={(e) => {\n                this.onUpdateItem(e)\n            }} className={`pt-3 ${formStyle}`}>\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-12\">\n                        <input\n                            onChange={this.onLabelChange}\n                            placeholder=\"Please edit your tweet\"\n                            value={this.state.label}\n                            className=\"form-control mb-3\"\n                        />\n                        <button\n                            className=\"btn btn-outline-primary\"\n                        >Edit Tweet\n                        </button>\n                    </div>\n                </div>\n            </form>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    const {updateTweet} = bindActionCreators(actions, dispatch);\n\n    return {\n        updateTweet\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemEditForm);","import React, {Component} from 'react';\nimport './twitter-list-item.css';\nimport ItemEditForm from './item-edit-form';\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as actions from '../actions.js';\n\nclass TwitterListItem extends Component {\n\n    state = {\n        formVisibility: false\n    };\n\n    formVisibility = () => {\n        this.setState({\n            formVisibility: !this.state.formVisibility\n        });\n    };\n\n    onUpdateItem = (label) => {\n        this.props.onUpdateItem(label);\n        this.setState({\n            formVisibility: !this.state.formVisibility\n        });\n    };\n\n    deleteTweet = () => {\n        const {id, state} = this.props;\n\n        const idx = state.mainState.items.findIndex((item) => item.id === id);\n        this.props.delTweet(idx)\n    };\n\n    render() {\n        const {label, id} = this.props;\n\n        return (\n            <li className=\"list-group-item twitter-item\" key={id}>\n                <span>{label}</span>\n                <button onClick={this.deleteTweet}\n                        className=\"btn btn-outline-danger btn-sm float-right\">\n                    <i className=\"fa fa-trash-o\"></i>\n                </button>\n                <button onClick={() => {\n                    this.formVisibility()\n                }}\n                        className=\"btn btn-outline-primary btn-sm mr-3 float-right\">\n                    <i className=\"fa fa-edit\"></i>\n                </button>\n                <ItemEditForm\n                    formVisibility={this.state.formVisibility}\n                    onUpdateItem={this.onUpdateItem}\n                    editLabel={label}\n                    itemId={id}\n                />\n            </li>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    const {delTweet} = bindActionCreators(actions, dispatch);\n    return {\n        delTweet\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TwitterListItem);","import React from 'react';\nimport TwitterListItem from './twitter-list-item';\nimport './twitter-list.css';\n\nconst TwitterList = ({filteredTweets}) => {\n\n    return (\n        <ul className=\"list-group twitter-list-group\">\n            {\n                filteredTweets.map((item) => {\n                    return (\n                        <TwitterListItem key={item.id} {...item} />\n                    );\n                })\n            }\n        </ul>\n    );\n};\n\nexport default TwitterList;","import React, { Component, Fragment } from 'react';\nimport './search-panel.css';\n\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions.js';\nimport { connect } from 'react-redux';\n\nclass SearchPanel extends Component {\n\n\trender () {\n\t    const { setSearchQuery } = this.props;\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t    <label>\n                    <strong>Search tweet : </strong>\n                </label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"form-control mb-4 col-md-6\"\n                    onChange={ (e) => setSearchQuery(e.target.value) }\n\t\t\t\t/>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        counter: state.mainState\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    const { setSearchQuery } = bindActionCreators( actions, dispatch );\n    return {\n        setSearchQuery\n    }\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )(SearchPanel);","import React, {Fragment, Component} from 'react';\n\nimport ItemAddForm from '../components/item-add-form';\nimport TwitterList from '../components/twitter-list';\nimport SearchPanel from '../components/search-panel';\n\nimport {connect} from 'react-redux';\nimport * as actions from '../actions.js';\nimport {bindActionCreators} from 'redux';\n\nimport { getList } from '../list-functions.js';\n\nclass Home extends Component {\n\n   /* componentDidmount(){\n        getList();\n    };*/\n\n    searchItems = (items, search) => {\n        if (search.length === 0) {\n            return items;\n        }\n        return items.filter((item) => {\n            return item.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\n        });\n    };\n\n    render() {\n        const {items, search} = this.props.state.mainState;\n        const filteredTweets = this.searchItems(items, search);\n\n        return (\n            <Fragment>\n                <SearchPanel/>\n                <ItemAddForm/>\n                <TwitterList\n                    filteredTweets={filteredTweets}\n                />\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    const {inc, dec, rand} = bindActionCreators(actions, dispatch);\n    return {\n        inc,\n        dec,\n        rand\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, {Fragment} from 'react';\n\nexport const About  = () => {\n    return (\n        <Fragment>\n            <div className=\"jumbotron\">\n                <h1 className=\"display-4\">About us</h1>\n                <p className=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra\n                    attention to featured content or information.</p>\n                <hr className=\"my-4\"/>\n                <p>It uses utility classes for typography and spacing to space content out within the larger\n                    container.</p>\n            </div>\n        </Fragment>\n    );\n};","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nconst LoginForm = (props) => {\n    const { handleSubmit, pristine, submitting } = props;\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor=\"email\">Email address:</label>\n                <div>\n                    <Field\n                        name=\"firstName\"\n                        component=\"input\"\n                        type=\"text\"\n                        placeholder=\"First Name\"\n                        className=\"form-control\"\n                    />\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"pwd\">Password:</label>\n                <div>\n                    <Field\n                        name=\"lastName\"\n                        component=\"input\"\n                        type=\"password\"\n                        placeholder=\"Last Name\"\n                        className=\"form-control\"\n                    />\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <label className=\"form-check-label\">\n                    <div>\n                        <Field\n                            name=\"employed\"\n                            id=\"employed\"\n                            component=\"input\"\n                            type=\"checkbox\"\n                        />  Remember me\n                    </div>\n                </label>\n            </div>\n            <button\n                type=\"submit\"\n                disabled={pristine || submitting}\n                className=\"btn btn-primary mr-2\">Submit\n            </button>\n        </form>\n    );\n};\n\nexport default reduxForm( {\n    form: 'simple',\n    onSubmit: (formData) => {console.log(formData)}\n})(LoginForm);","import React, {Component, Fragment} from 'react';\nimport AppHeader from './components/app-header';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nimport Home from './pages/Home.js';\nimport {About} from './pages/About.js';\nimport LoginForm from './pages/Auth.js';\n\nimport './App.css';\nimport * as actions from \"./actions\";\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Fragment>\n                <BrowserRouter>\n                    <AppHeader/>\n                    <div className=\"twitter-app\">\n                        <Switch>\n                            <Route path={'/'} exact component={Home}/>\n                            <Route path={'/about'} component={About}/>\n                            <Route path={'/auth'} component={LoginForm}/>\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Fragment>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    const {addTweet} = bindActionCreators(actions, dispatch);\n    return {\n        addTweet\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import uuid from \"uuid\";\n\nconst initialState = {\n    items: [\n        {label: 'i love drink', id: uuid.v4()},\n        {label: 'iphone 7 is the best', id: uuid.v4()},\n        {label: 'this is my best idea', id: uuid.v4()}\n    ],\n    search: ''\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_TWEET':\n            return {...state, items: [...state.items, {label: action.payload.label, id: action.payload.id}]};\n        case 'DELETE_TWEET':\n            return {\n                ...state,\n                items: [...state.items.slice(0, action.payload.id), ...state.items.slice(action.payload.id + 1)]\n            };\n        case 'UPDATE_TWEET':\n            return {\n                ...state,\n                items: [...state.items.slice(0, action.payload.id), action.payload.item, ...state.items.slice(action.payload.id + 1)]\n            };\n        case 'SET_SEARCH_QUERY':\n            return {...state, search: action.payload.searchQuery};\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n\nimport thunkMiddleware from 'redux-thunk';\n\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\n\nimport {reducer} from './reducer.js';\nimport { reducer as formReducer } from 'redux-form';\n\nimport {Provider} from 'react-redux';\n\nlet reducers = combineReducers({\n    mainState: reducer,\n    form: formReducer\n});\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}